includeConfig 'conf/base.config'

params {
    
    //specify input
    //a folder with one or many vcf files. VCF files won't be splited
    vcf_in = "/lustre/scratch126/humgen/teams/hgi/users/vo3/vep_test/vcf1/"
    
    //or one big vcf file that will be splited into several chunks
    vcf_infile = "/lustre/scratch126/humgen/teams/hgi/users/vo3/vep_test/vcf1/chr1_156797149-156797468.sort.vcf.gz"
    split_input = 'true' // use 'true' to split one big VCF file
    number_of_chunks = 2  // specify the number of chunks if don't use bed file with intervals to split VCF
    use_bed_to_split='true' // use 'true' to split one big VCF file using intervals in bed file
    //interval_bed is used to split VCF if use_bed_to_split='true'
    interval_bed = "/lustre/scratch125/humgen/resources/exome/Homo_sapiens/Twist/Twist_Human_Core_Exome_BI-CTR.bed"

    //mandatory parameters
    ref_fasta = "/lustre/scratch125/humgen/resources/ref/Homo_sapiens/HS38DH/hs38DH.fa"
    vep_cmd="/lustre/scratch126/humgen/teams/hgi/users/vo3/vep_test/test/run_vep_original2.sh"
    workdir = "/lustre/scratch126/humgen/teams/hgi/users/vo3/work"
    publishdir = "/lustre/scratch126/humgen/teams/hgi/users/vo3/vep_test/output1/"

    vep_options = '''--dir_cache /opt/vep/.vep/ \
        --assembly GRCh38 \
        --fasta /opt/vep/.vep/homo_sapiens/111_GRCh38/Homo_sapiens.GRCh38.dna.toplevel.fa.gz \
        --dir_plugins /opt/vep/.vep/Plugins \
        --plugin SpliceRegion,Extended \
        --plugin GeneSplicer,/opt/vep/.vep/Plugins/GeneSplicer/bin/linux/genesplicer,/opt/vep/.vep/Plugins/GeneSplicer/human \
        --plugin UTRannotator,/opt/vep/.vep/Plugins/uORF_starts_ends_GRCh38_PUBLIC.txt \
        --plugin CADD,/lustre/scratch125/humgen/resources/cadd_scores/20201027-GRCh38_v1.6/whole_genome_SNVs.tsv.gz,/lustre/scratch125/humgen/resources/cadd_scores/20201027-GRCh38_v1.6/gnomad.genomes.r3.0.indel.tsv.gz \
        --plugin dbNSFP,/opt/vep/.vep/Plugins/dbNSFP4.5a_grch38.gz,Ensembl_transcriptid,Uniprot_acc,VEP_canonical,LRT_pred,SIFT_pred,MutationTaster_pred,Polyphen2_HDIV_pred,Polyphen2_HVAR_pred,AlphaMissense_score,AlphaMissense_rankscore,AlphaMissense_pred,PrimateAI_score,PrimateAI_rankscore,PrimateAI_pred \
        --plugin DisGeNET,file=/opt/vep/.vep/Plugins/all_variant_disease_pmid_associations_final.tsv.gz \
        --plugin Phenotypes,file=/opt/vep/.vep/Plugins/phenotypes.gff.gz,include_types=Variation \
        --plugin Conservation,/opt/vep/.vep/Plugins/90_mammals.gerp_conservation_scores.homo_sapiens.GRCh38.bw \
        --plugin LoF,loftee_path:/opt/vep/.vep/Plugins,human_ancestor_fa:/opt/vep/.vep/Plugins/GRCh38_human_ancestor.fa.gz,conservation_file:/opt/vep/.vep/Plugins/loftee.sql,gerp_bigwig:/opt/vep/.vep/Plugins/90_mammals.gerp_conservation_scores.homo_sapiens.GRCh38.bw \
        --plugin REVEL,/opt/vep/.vep/Plugins/grch38_tabbed_revel.tsv.gz \
        --plugin SpliceAI,snv=/lustre/scratch125/humgen/resources/SpliceAI_data_files/spliceai_scores.raw.snv.hg38.vcf.gz,indel=/lustre/scratch125/humgen/resources/SpliceAI_data_files/spliceai_scores.raw.indel.hg38.vcf.gz \
        --plugin EVE,file=/opt/vep/.vep/Plugins/EVE_data/eve_plugin/eve_merged.vcf.gz \
        --plugin Enformer,file=/opt/vep/.vep/Plugins/enformer_grch38.vcf.gz \
        --plugin MaveDB,file=/opt/vep/.vep/Plugins/MaveDB_variants.tsv.gz,cols=all \
        --plugin RiboseqORFs,file=/opt/vep/.vep/Plugins/Ribo-seq_ORFs.bed.gz \
        --plugin AncestralAllele,/opt/vep/.vep/Plugins/homo_sapiens_ancestor_GRCh38.fa.gz \
        --plugin OpenTargets,file=/opt/vep/.vep/Plugins/OTGenetics.tsv.gz,cols=all \
        --plugin LoFtool,/opt/vep/.vep/Plugins/LoFtool_scores.txt \
        --plugin VARITY,file=/opt/vep/.vep/Plugins/varity_all_predictions_38.tsv.gz \
        --plugin BayesDel,file=/opt/vep/.vep/Plugins/BayesDel_170824_addAF_all_scores_GRCh38_sorted.txt.gz'''

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    
}

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "https://raw.githubusercontent.com/nf-core/configs/master/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: https://raw.githubusercontent.com/nf-core/configs/master/nfcore_custom.config")
}


def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}

singularity {
  enabled = true
  cacheDir = '/nfs/hgi/singularityContainers/'
  runOptions = '--bind /lustre'
}
